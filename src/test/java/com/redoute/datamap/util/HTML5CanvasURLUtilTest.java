package com.redoute.datamap.util;

import org.apache.commons.codec.binary.Base64;
import org.junit.Assert;
import org.junit.Test;

import com.redoute.datamap.util.HTML5CanvasURLUtil.HTML5CanvasURLParsingException;

/**
 * {@link HTML5CanvasURLUtil} test suite
 * 
 * @author abourdon
 */
public class HTML5CanvasURLUtilTest {

	private static final String BASE64_DATA = "";
	private static final String IMAGE_PREFIX = "png";

	private static final String GOOD_CANVAS_URL = String.format("data:image/%s;base64,%s", IMAGE_PREFIX, BASE64_DATA);
	private static final String WRONG_CANVAS_URL = String.format("data:wrong/%s;base64,%s", IMAGE_PREFIX, BASE64_DATA);

	@Test
	public void testParseImageType() throws HTML5CanvasURLParsingException {
		Assert.assertEquals(IMAGE_PREFIX, HTML5CanvasURLUtil.parseImageType(GOOD_CANVAS_URL));
	}

	@Test(expected = HTML5CanvasURLParsingException.class)
	public void testParseImageTypeWithWrongFormat() throws HTML5CanvasURLParsingException {
		HTML5CanvasURLUtil.parseImageType(WRONG_CANVAS_URL);
	}

	@Test(expected = HTML5CanvasURLParsingException.class)
	public void testParseImageTypeWithEmptyFormat() throws HTML5CanvasURLParsingException {
		HTML5CanvasURLUtil.parseImageType("");
	}

	@Test(expected = HTML5CanvasURLParsingException.class)
	public void testParseImageTypeWithNullFormat() throws HTML5CanvasURLParsingException {
		HTML5CanvasURLUtil.parseImageType(null);
	}

	@Test
	public void testParseBase64Data() throws HTML5CanvasURLParsingException {
		Assert.assertEquals(BASE64_DATA, HTML5CanvasURLUtil.parseBase64Data(GOOD_CANVAS_URL));
	}

	@Test(expected = HTML5CanvasURLParsingException.class)
	public void testParseBase64DataWithWrongFormat() throws HTML5CanvasURLParsingException {
		HTML5CanvasURLUtil.parseBase64Data(WRONG_CANVAS_URL);
	}

	@Test(expected = HTML5CanvasURLParsingException.class)
	public void testParseBase64DataWithEmptyFormat() throws HTML5CanvasURLParsingException {
		HTML5CanvasURLUtil.parseBase64Data("");
	}

	@Test(expected = HTML5CanvasURLParsingException.class)
	public void testParseBase64DataWithNullFormat() throws HTML5CanvasURLParsingException {
		HTML5CanvasURLUtil.parseBase64Data(null);
	}

	@Test
	public void testToCanvasURL() {
		Assert.assertEquals(GOOD_CANVAS_URL, HTML5CanvasURLUtil.toCanvasURL(IMAGE_PREFIX, BASE64_DATA));
	}

	@Test
	public void testDecodeBase64Data() {
		Assert.assertArrayEquals(Base64.decodeBase64(BASE64_DATA.getBytes()), HTML5CanvasURLUtil.decodeBase64Data(BASE64_DATA));
	}

	@Test
	public void testEncodeBase64Data() {
		Assert.assertEquals(BASE64_DATA, HTML5CanvasURLUtil.encodeBase64Data(HTML5CanvasURLUtil.decodeBase64Data(BASE64_DATA)));
	}

}
